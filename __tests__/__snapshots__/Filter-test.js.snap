// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Displays a list of unique podcast tags 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "justifyContent": "space-between",
      "width": 400,
    }
  }
>
  <ScrollView
    style={
      Object {
        "height": "70%",
        "marginBottom": 10,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": 250,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      />
      <View
        style={
          Object {
            "justifyContent": "center",
            "width": 200,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "All Likes",
                "textColor": undefined,
                "value": "likedOff",
              },
              Object {
                "label": "Liked",
                "textColor": undefined,
                "value": "liked",
              },
              Object {
                "label": "Not Liked",
                "textColor": undefined,
                "value": "notLiked",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              Object {
                "fontSize": 10,
              },
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": 250,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      />
      <View
        style={
          Object {
            "justifyContent": "center",
            "width": 200,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "All Bookmarks",
                "textColor": undefined,
                "value": "bookmarkedOff",
              },
              Object {
                "label": "Bookmarked",
                "textColor": undefined,
                "value": "bookmarked",
              },
              Object {
                "label": "Not Bookmarked",
                "textColor": undefined,
                "value": "notBookmarked",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": 250,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 28,
            "width": 28,
          }
        }
      />
      <View
        style={
          Object {
            "justifyContent": "center",
            "width": 200,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "All Durations",
                "textColor": undefined,
                "value": "timeOff",
              },
              Object {
                "label": "< 5 min",
                "textColor": undefined,
                "value": "5",
              },
              Object {
                "label": "< 15 min",
                "textColor": undefined,
                "value": "15",
              },
              Object {
                "label": "< 30 min",
                "textColor": undefined,
                "value": "30",
              },
              Object {
                "label": "< 45 min",
                "textColor": undefined,
                "value": "45",
              },
              Object {
                "label": "< 60 min",
                "textColor": undefined,
                "value": "60",
              },
              Object {
                "label": "> 60 min",
                "textColor": undefined,
                "value": "60+",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": 250,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      />
      <View
        style={
          Object {
            "justifyContent": "center",
            "width": 200,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "All Tags",
                "textColor": undefined,
                "value": "All Tags",
              },
              Object {
                "label": "Tech News",
                "textColor": undefined,
                "value": "Tech News",
              },
              Object {
                "label": "Science",
                "textColor": undefined,
                "value": "Science",
              },
              Object {
                "label": "Technology",
                "textColor": undefined,
                "value": "Technology",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": 250,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      />
      <View
        style={
          Object {
            "justifyContent": "center",
            "width": 200,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "All Podcasts",
                "textColor": undefined,
                "value": "All Podcasts",
              },
              Object {
                "label": "Note to Self",
                "textColor": undefined,
                "value": "Note to Self",
              },
              Object {
                "label": "Science VS",
                "textColor": undefined,
                "value": "Science VS",
              },
              Object {
                "label": "Science Vs",
                "textColor": undefined,
                "value": "Science Vs",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
          "width": 250,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
      />
      <View
        style={
          Object {
            "justifyContent": "center",
            "width": 200,
          }
        }
      >
        <RCTPicker
          items={
            Array [
              Object {
                "label": "All Playlists",
                "textColor": undefined,
                "value": "All Playlists",
              },
              Object {
                "label": "Test playlist",
                "textColor": undefined,
                "value": "Test playlist",
              },
            ]
          }
          onChange={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          selectedIndex={0}
          style={
            Array [
              Object {
                "height": 216,
              },
              undefined,
            ]
          }
        />
      </View>
    </View>
  </ScrollView>
  <View
    style={Object {}}
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      hitSlop={undefined}
      isTVSelectable={true}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#0C42FD",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
              Object {
                "color": "grey",
              },
            ]
          }
        >
          Filter
        </Text>
      </View>
    </View>
  </View>
</View>
`;
